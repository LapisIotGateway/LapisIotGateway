[
    {
        "id": "50af152f.7b68b4",
        "type": "tab",
        "label": "Flow 1"
    },
    {
        "id": "444c9d1e.54cf84",
        "type": "toami out",
        "z": "50af152f.7b68b4",
        "name": "",
        "config": "",
        "timeout": "",
        "retry": "",
        "interval": "",
        "x": 1195,
        "y": 479,
        "wires": []
    },
    {
        "id": "cc17e1c.08e3da",
        "type": "rm92a in",
        "z": "50af152f.7b68b4",
        "name": "",
        "serial": "",
        "rm92a": "",
        "interval": "1000",
        "enbinterval": true,
        "latestpacket": false,
        "x": 82,
        "y": 473.5,
        "wires": [
            [
                "2f758d93.7f3e3a"
            ]
        ]
    },
    {
        "id": "576725e8.cc7b3c",
        "type": "slr429 in",
        "z": "50af152f.7b68b4",
        "name": "",
        "serial": "",
        "slr429": "",
        "interval": "1000",
        "enbinterval": true,
        "latestpacket": false,
        "x": 77,
        "y": 647.5,
        "wires": [
            [
                "c301513f.5865e8"
            ]
        ]
    },
    {
        "id": "cd32fc57.b63c6",
        "type": "delay",
        "z": "50af152f.7b68b4",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 239,
        "y": 365.5,
        "wires": [
            [
                "f04af391.61ef08"
            ]
        ]
    },
    {
        "id": "61707196.9b6cc8",
        "type": "function",
        "z": "50af152f.7b68b4",
        "name": "hex to string",
        "func": "\n/* globals msg */\nmsg.payload = msg.payload.toString('hex');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 375,
        "y": 98.5,
        "wires": [
            [
                "7ff96401.22c3cc"
            ]
        ]
    },
    {
        "id": "7ff96401.22c3cc",
        "type": "function",
        "z": "50af152f.7b68b4",
        "name": "Split for RM92A",
        "func": "\n/* globals msg, node, util */\nvar max = 93;\nvar split = max;\n\nvar payload = msg.payload;\nvar num;\nvar digit = 1;\nfor (;; digit++) {\n    num = Math.ceil(payload.length / split);\n    if (num >= Math.pow(10, digit)) {\n        split = split - 2;\n    } else {\n        break;\n    }\n}\n\nif (split < 0) {\n    node.error(\"Can't split payload, because payload too long(\" + payload.length + \").\", msg);\n    return null;\n}\n\nvar zeroPadding = \"\";\nvar i;\nfor (i = 0; i < digit; i++) {\n    zeroPadding += \"0\";\n}\n\nvar seq;\nvar amount = (zeroPadding + num).slice(-digit);\nvar data;\nvar format;\nvar msgs = [];\nfor (i = 0; i < num; i++) {\n    seq = (zeroPadding + i).slice(-digit);\n    data = payload.slice(split * (i), Math.min(split * (i+1), payload.length));\n    format = util.format(\"@F;%s;%s;%s\", seq, amount, data);\n    msgs.push({payload: format});\n}\n\nreturn [msgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 597,
        "y": 98.5,
        "wires": [
            [
                "555c134e.e66524"
            ]
        ]
    },
    {
        "id": "555c134e.e66524",
        "type": "rm92a out",
        "z": "50af152f.7b68b4",
        "serial": "",
        "rm92a": "",
        "dst": "0xFFFF",
        "x": 889,
        "y": 98,
        "wires": []
    },
    {
        "id": "d5e6352f.c8ed78",
        "type": "slr429 out",
        "z": "50af152f.7b68b4",
        "serial": "",
        "slr429": "",
        "gid": "0x00",
        "did": "0xFF",
        "x": 891,
        "y": 207,
        "wires": []
    },
    {
        "id": "f7901086.f3e968",
        "type": "function",
        "z": "50af152f.7b68b4",
        "name": "Collect Toami Data",
        "func": "\n/*globals msg, context */\nvar startTrigger = \"@start\";\nvar sendTrigger = \"@send\";\n\nvar keys = [\n    \"n01\", \"n02\", \"n03\", \"n04\", \"n05\", \"n06\", \"n07\", \"n08\", \"n09\", \"n10\",\n    \"n11\", \"n12\", \"n13\", \"n14\", \"n15\", \"n16\", \"n17\", \"n18\", \"n19\", \"n20\",\n    \"n21\", \"n22\", \"n23\", \"n24\", \"n25\", \"n26\", \"n27\", \"n28\", \"n29\", \"n30\",\n    \"s01\", \"s02\", \"s03\", \"s04\", \"s05\", \"s06\", \"s07\", \"s08\", \"s09\", \"s10\",\n    \"l01\",\n];\n\nvar timestampKey = \"gwtimestamp\";\nvar toami;\n\nvar payload = msg.payload;\nif (msg.payload === startTrigger) {\n    context.temp = {};\n    return null;\n} else if (msg.payload === sendTrigger) {\n    if (!context.temp) {\n        return null;\n    }\n\n    toami = context.temp;\n    context.temp = null;\n\n    if (Object.keys(toami).length === 0) {\n        return null;\n    }\n\n    toami[timestampKey] = Date.now();\n    return { payload: toami };\n} else {\n    if (!context.temp) {\n        return null;\n    }\n\n    keys.forEach(function(key) {\n        if (payload.hasOwnProperty(key)) {\n            context.temp[key] = payload[key];\n        }\n    });\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 724,
        "y": 477.5,
        "wires": [
            [
                "444c9d1e.54cf84",
                "93c5fc2.637b68"
            ]
        ]
    },
    {
        "id": "bbb986f4.97af5",
        "type": "function",
        "z": "50af152f.7b68b4",
        "name": "Write File",
        "func": "\n/*globals msg, context, util */\nvar payload = msg.payload;\nvar dir = \"/home/pi/toami\";\n\nif (Number.isFinite(payload)) {\n    // timestamp\n    var date = new Date(payload);\n    context.filename = util.format(\"%s/toami_%d%s%s%s%s%s.csv\",\n        dir,\n        date.getFullYear(),\n        (\"0\" + (date.getMonth() + 1)).slice(-2),\n        (\"0\" + date.getDate()).slice(-2),\n        (\"0\" + date.getHours()).slice(-2),\n        (\"0\" + date.getMinutes()).slice(-2),\n        (\"0\" + date.getSeconds()).slice(-2));\n    return null;\n} else {\n    // csv\n    return {\n        filename: context.filename,\n        payload: msg.payload,\n    };\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 1043,
        "y": 405.5,
        "wires": [
            [
                "d7d9100b.116e7"
            ]
        ]
    },
    {
        "id": "93c5fc2.637b68",
        "type": "csv",
        "z": "50af152f.7b68b4",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "x": 887,
        "y": 405.5,
        "wires": [
            [
                "bbb986f4.97af5"
            ]
        ]
    },
    {
        "id": "c1a9b923.bc393",
        "type": "inject",
        "z": "50af152f.7b68b4",
        "name": "timestamp every hour",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "x": 813,
        "y": 305.5,
        "wires": [
            [
                "bbb986f4.97af5"
            ]
        ]
    },
    {
        "id": "d7d9100b.116e7",
        "type": "file",
        "z": "50af152f.7b68b4",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1192,
        "y": 405.5,
        "wires": []
    },
    {
        "id": "e8aef501.067a1",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "trigger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "@trigger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 359,
        "y": 208.5,
        "wires": [
            [
                "d5e6352f.c8ed78"
            ]
        ]
    },
    {
        "id": "1b77b817.1039b8",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "RF1 convert toami",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.n01",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload.n02",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.pressure",
                "pt": "msg",
                "to": "payload.n03",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.location",
                "pt": "msg",
                "to": "payload.l01",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 445,
        "y": 475.5,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "b88361cf.1de938",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "RF2 convert toami",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.n04",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload.n05",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.pressure",
                "pt": "msg",
                "to": "payload.n06",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.location",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 446,
        "y": 551,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "f04af391.61ef08",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "send trigger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "@send",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 423,
        "y": 366,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "2f758d93.7f3e3a",
        "type": "function",
        "z": "50af152f.7b68b4",
        "name": "Packet Parser",
        "func": "\n// $1 : Src address\n// $2 : GNRMC\n// $3 : Temperature\n// $4 : Humidity\n// $5 : Atmospheric pressure\nvar regex = /^([0-9a-fA-F]+),(?:\\$GNRMC,(.*),)?BME280,([0-9.]*),([0-9.]*),([0-9.]*)$/;\n\n// $1  : UTC Time\n// $2  : A:Valid, V:Invalid\n// $3  : Latitude\n// $4  : N:North, S:South\n// $5  : Longitude\n// $6  : E:East, W:West\n// $7  : Speed over ground\n// $8  : Course over ground\n// $9  : UTC Date\n// $10 : Magnetic variation\n// $11 : Magnetic variation direction (E:East, W:West)\n// $12 : Positioning system mode indicator\n// $13 : Checksum\nvar rmc = /^([0-9.]*),(A|V),([0-9.]*),(N|S),([0-9.]*),(E|W),([0-9.]*),([0-9.]*),(\\d*),([0-9.]*),(E?|W?),(A|D|E|M|S|N)\\*([0-9A-F]{2})$/;\n\n//  $1 : Degree\n//  $2 : Minutes\n//  $3 : Seconds\nvar dms = /(\\d*)(\\d{2})\\.(\\d*)/;\n\nfunction translate(value) {\n    var degrees = parseInt(value[1], 10);\n    var minutes = parseInt(value[2], 10);\n    var seconds = parseFloat(value[3].replace(/(\\d{2})(\\d*)/, \"$1.$2\"));\n    return degrees + (minutes / 60) + (seconds / 3600);\n}\n\n/* globals msg, node */\nvar rssi = msg.rssi;\nvar payload = msg.payload;\n\n// payload parse\nvar m = regex.exec(payload);\nif (!m) {\n    node.error(\"Invalid msg : \" + payload, msg);\n    return;\n}\n\nvar src = parseInt(m[1], 16);\nvar gnrmc = m[2];\nvar temperature = parseFloat(m[3]);\nvar humidity = parseFloat(m[4]);\nvar pressure = parseFloat(m[5]);\n\nvar result = {\n    src: src,\n    rssi: rssi,\n    payload: {\n        temperature: temperature,\n        humidity: humidity,\n        pressure: pressure,\n    },\n};\n\nif (gnrmc) {\n        m = rmc.exec(gnrmc);\n    if (!m) {\n        node.error(\"Invalid gnrmc : \" + gnrmc, msg);\n        return;\n    }\n\n    var latitudeValue = m[3];\n    var latitudeDirection = m[4];\n\n    var longitudeValue = m[5];\n    var longitudeDirection = m[6];\n\n    m = dms.exec(latitudeValue);\n    if (!m) {\n        node.error(\"Invalid latitude : \" + latitudeValue , msg);\n        return;\n    }\n    var latitude = translate(m);\n\n    m = dms.exec(longitudeValue);\n    if (!m) {\n        node.error(\"Invalid longitude : \" + longitudeValue , msg);\n        return;\n    }\n    var longitude = translate(m);\n\n    if (latitudeDirection === \"S\") {\n        latitude *= -1;\n    }\n\n    if (longitudeDirection === \"W\") {\n        longitude *= -1;\n    }\n\n    result.payload.location = { latitude: latitude, longitude: longitude };\n}\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "x": 127,
        "y": 544.5,
        "wires": [
            [
                "d3dc7cb6.bcbbe"
            ]
        ]
    },
    {
        "id": "d3dc7cb6.bcbbe",
        "type": "switch",
        "z": "50af152f.7b68b4",
        "name": "",
        "property": "src",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 224,
        "y": 614.5000305175781,
        "wires": [
            [
                "1b77b817.1039b8"
            ],
            [
                "b88361cf.1de938"
            ]
        ]
    },
    {
        "id": "f29a4b47.7a5038",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "start trigger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "@start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 422,
        "y": 289,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "c301513f.5865e8",
        "type": "function",
        "z": "50af152f.7b68b4",
        "name": "Packet Parser",
        "func": "\n// $1 : Src address\n// $2 : GNRMC\n// $3 : Temperature\n// $4 : Humidity\n// $5 : Atmospheric pressure\nvar regex = /^([0-9a-fA-F]+),(?:\\$GNRMC,(.*),)?BME280,([0-9.]*),([0-9.]*),([0-9.]*)$/;\n\n// $1  : UTC Time\n// $2  : A:Valid, V:Invalid\n// $3  : Latitude\n// $4  : N:North, S:South\n// $5  : Longitude\n// $6  : E:East, W:West\n// $7  : Speed over ground\n// $8  : Course over ground\n// $9  : UTC Date\n// $10 : Magnetic variation\n// $11 : Magnetic variation direction (E:East, W:West)\n// $12 : Positioning system mode indicator\n// $13 : Checksum\nvar rmc = /^([0-9.]*),(A|V),([0-9.]*),(N|S),([0-9.]*),(E|W),([0-9.]*),([0-9.]*),(\\d*),([0-9.]*),(E?|W?),(A|D|E|M|S|N)\\*([0-9A-F]{2})$/;\n\n//  $1 : Degree\n//  $2 : Minutes\n//  $3 : Seconds\nvar dms = /(\\d*)(\\d{2})\\.(\\d*)/;\n\nfunction translate(value) {\n    var degrees = parseInt(value[1], 10);\n    var minutes = parseInt(value[2], 10);\n    var seconds = parseFloat(value[3].replace(/(\\d{2})(\\d*)/, \"$1.$2\"));\n    return degrees + (minutes / 60) + (seconds / 3600);\n}\n\n/* globals msg, node */\nvar rssi = msg.rssi;\nvar payload = msg.payload;\n\n// payload parse\nvar m = regex.exec(payload);\nif (!m) {\n    node.error(\"Invalid msg : \" + payload, msg);\n    return;\n}\n\nvar src = parseInt(m[1], 16);\nvar gnrmc = m[2];\nvar temperature = parseFloat(m[3]);\nvar humidity = parseFloat(m[4]);\nvar pressure = parseFloat(m[5]);\n\nvar result = {\n    src: src,\n    rssi: rssi,\n    payload: {\n        temperature: temperature,\n        humidity: humidity,\n        pressure: pressure,\n    },\n};\n\nif (gnrmc) {\n        m = rmc.exec(gnrmc);\n    if (!m) {\n        node.error(\"Invalid gnrmc : \" + gnrmc, msg);\n        return;\n    }\n\n    var latitudeValue = m[3];\n    var latitudeDirection = m[4];\n\n    var longitudeValue = m[5];\n    var longitudeDirection = m[6];\n\n    m = dms.exec(latitudeValue);\n    if (!m) {\n        node.error(\"Invalid latitude : \" + latitudeValue , msg);\n        return;\n    }\n    var latitude = translate(m);\n\n    m = dms.exec(longitudeValue);\n    if (!m) {\n        node.error(\"Invalid longitude : \" + longitudeValue , msg);\n        return;\n    }\n    var longitude = translate(m);\n\n    if (latitudeDirection === \"S\") {\n        latitude *= -1;\n    }\n\n    if (longitudeDirection === \"W\") {\n        longitude *= -1;\n    }\n\n    result.payload.location = { latitude: latitude, longitude: longitude };\n}\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "x": 124,
        "y": 721,
        "wires": [
            [
                "2b464ec4.b0a12a"
            ]
        ]
    },
    {
        "id": "2b464ec4.b0a12a",
        "type": "switch",
        "z": "50af152f.7b68b4",
        "name": "",
        "property": "src",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 180,
        "y": 783.0000305175781,
        "wires": [
            [
                "9c6a88a.56ba1f8"
            ],
            [
                "7ef31b29.b09fcc"
            ]
        ]
    },
    {
        "id": "9c6a88a.56ba1f8",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "RF1 convert toami",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.n07",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload.n08",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.pressure",
                "pt": "msg",
                "to": "payload.n09",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 445,
        "y": 680,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "7ef31b29.b09fcc",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "RF2 convert toami",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.n10",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload.n11",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.pressure",
                "pt": "msg",
                "to": "payload.n12",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 446,
        "y": 755.5,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "2eb365aa.27c632",
        "type": "serial in",
        "z": "50af152f.7b68b4",
        "name": "EnOcean",
        "serial": "",
        "x": 81,
        "y": 872.5,
        "wires": [
            [
                "6de13a5b.f37654"
            ]
        ]
    },
    {
        "id": "3c8666fa.908e4a",
        "type": "switch",
        "z": "50af152f.7b68b4",
        "name": "",
        "property": "id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 246,
        "y": 942,
        "wires": [
            [
                "c0bd1242.44885"
            ],
            [
                "1e2005a.0b5667a"
            ]
        ]
    },
    {
        "id": "c0bd1242.44885",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "RF1 convert toami",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.n13",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload.n14",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.pressure",
                "pt": "msg",
                "to": "payload.n15",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 439,
        "y": 907,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "1e2005a.0b5667a",
        "type": "change",
        "z": "50af152f.7b68b4",
        "name": "RF2 convert toami",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "payload.n16",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload.n17",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.pressure",
                "pt": "msg",
                "to": "payload.n18",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 439,
        "y": 979,
        "wires": [
            [
                "f7901086.f3e968"
            ]
        ]
    },
    {
        "id": "1680e12a.61c687",
        "type": "serial in",
        "z": "50af152f.7b68b4",
        "name": "RTCM",
        "serial": "",
        "x": 55,
        "y": 95.5,
        "wires": [
            [
                "29874788.ac36d"
            ]
        ]
    },
    {
        "id": "29874788.ac36d",
        "type": "delay",
        "z": "50af152f.7b68b4",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 105,
        "y": 172.5,
        "wires": [
            [
                "61707196.9b6cc8",
                "e8aef501.067a1",
                "cd32fc57.b63c6",
                "f29a4b47.7a5038"
            ]
        ]
    },
    {
        "id": "6de13a5b.f37654",
        "type": "esp3 in",
        "z": "50af152f.7b68b4",
        "name": "",
        "eeps": [],
        "x": 105,
        "y": 943.5,
        "wires": [
            [
                "3c8666fa.908e4a"
            ]
        ]
    },
    {
        "id": "929ce995.474ee",
        "type": "comment",
        "z": "50af152f.7b68b4",
        "name": "a5-02-05",
        "info": "",
        "x": 92,
        "y": 1000.5,
        "wires": []
    },
    {
        "id": "8abd9d32.f0c59",
        "type": "comment",
        "z": "50af152f.7b68b4",
        "name": "a5-04-01",
        "info": "",
        "x": 92,
        "y": 1041.5,
        "wires": []
    }
]