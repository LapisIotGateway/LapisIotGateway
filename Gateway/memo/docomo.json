[{"id":"d37f522c.594558","type":"toami out","z":"bffe4fe1.a00d58","name":"","timeout":"","retry":"","interval":"","x":1195,"y":479,"wires":[]},{"id":"134c6959.3b29c7","type":"rm92a in","z":"bffe4fe1.a00d58","name":"","serial":"ac8e213f.257558","rm92a":"e094da4d.9f8538","interval":"1000","enbinterval":true,"latestpacket":false,"x":82,"y":473.5,"wires":[["6035a52e.12bab4"]]},{"id":"47099fb4.845e5","type":"slr429 in","z":"bffe4fe1.a00d58","name":"","serial":"5497306f.b6ca3","slr429":"6e56209.0cda56","interval":"1000","enbinterval":true,"latestpacket":false,"x":77,"y":647.5,"wires":[["c3dc5232.d7e1c8"]]},{"id":"a514277b.d4bab","type":"delay","z":"bffe4fe1.a00d58","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":239,"y":365.5,"wires":[["a8febdc9.5f861"]]},{"id":"36d23c20.c6f7b4","type":"function","z":"bffe4fe1.a00d58","name":"hex to string","func":"\n/* globals msg */\nmsg.payload = msg.payload.toString('hex');\nreturn msg;","outputs":1,"noerr":0,"x":375,"y":98.5,"wires":[["43433a77.d5400c"]]},{"id":"43433a77.d5400c","type":"function","z":"bffe4fe1.a00d58","name":"Split for RM92A","func":"\n/* globals msg, node, util */\nvar max = 93;\nvar split = max;\n\nvar payload = msg.payload;\nvar num;\nvar digit = 1;\nfor (;; digit++) {\n    num = Math.ceil(payload.length / split);\n    if (num >= Math.pow(10, digit)) {\n        split = split - 2;\n    } else {\n        break;\n    }\n}\n\nif (split < 0) {\n    node.error(\"Can't split payload, because payload too long(\" + payload.length + \").\", msg);\n    return null;\n}\n\nvar zeroPadding = \"\";\nvar i;\nfor (i = 0; i < digit; i++) {\n    zeroPadding += \"0\";\n}\n\nvar seq;\nvar amount = (zeroPadding + num).slice(-digit);\nvar data;\nvar format;\nvar msgs = [];\nfor (i = 0; i < num; i++) {\n    seq = (zeroPadding + i).slice(-digit);\n    data = payload.slice(split * (i), Math.min(split * (i+1), payload.length));\n    format = util.format(\"@F;%s;%s;%s\", seq, amount, data);\n    msgs.push({topic: i, payload: format});\n}\n\nreturn [msgs];","outputs":1,"noerr":0,"x":608,"y":98.5,"wires":[["f14bc152.1ac9c8"]]},{"id":"18f8778e.b168b8","type":"rm92a out","z":"bffe4fe1.a00d58","serial":"ac8e213f.257558","rm92a":"e094da4d.9f8538","dst":"0xFFFF","x":1113,"y":99,"wires":[]},{"id":"939e3ff0.99be08","type":"slr429 out","z":"bffe4fe1.a00d58","serial":"5497306f.b6ca3","slr429":"6e56209.0cda56","gid":"0x00","did":"0x00","x":891,"y":207,"wires":[]},{"id":"81323bbd.570388","type":"function","z":"bffe4fe1.a00d58","name":"Collect Toami Data","func":"\n/*globals msg, context */\nvar startTrigger = \"@start\";\nvar sendTrigger = \"@send\";\n\nvar keys = [\n    \"n01\", \"n02\", \"n03\", \"n04\", \"n05\", \"n06\", \"n07\", \"n08\", \"n09\", \"n10\",\n    \"n11\", \"n12\", \"n13\", \"n14\", \"n15\", \"n16\", \"n17\", \"n18\", \"n19\", \"n20\",\n    \"n21\", \"n22\", \"n23\", \"n24\", \"n25\", \"n26\", \"n27\", \"n28\", \"n29\", \"n30\",\n    \"s01\", \"s02\", \"s03\", \"s04\", \"s05\", \"s06\", \"s07\", \"s08\", \"s09\", \"s10\",\n    \"l01\",\n];\n\nvar timestampKey = \"gwtimestamp\";\nvar toami;\n\nvar payload = msg.payload;\nif (msg.payload === startTrigger) {\n    context.temp = {};\n    return null;\n} else if (msg.payload === sendTrigger) {\n    if (!context.temp) {\n        return null;\n    }\n\n    toami = context.temp;\n    context.temp = null;\n\n    if (Object.keys(toami).length === 0) {\n        return null;\n    }\n\n    toami[timestampKey] = Date.now();\n    return { payload: toami };\n} else {\n    if (!context.temp) {\n        return null;\n    }\n\n    keys.forEach(function(key) {\n        if (payload.hasOwnProperty(key)) {\n            context.temp[key] = payload[key];\n        }\n    });\n    return null;\n}","outputs":1,"noerr":0,"x":724,"y":477.5,"wires":[["d37f522c.594558","8ffe08b7.725838","92f328b8.0ebbc"]]},{"id":"f2b35431.3b9828","type":"function","z":"bffe4fe1.a00d58","name":"Write File","func":"\n/*globals msg, context, util */\nvar payload = msg.payload;\nvar dir = \"/home/pi/toami\";\n\nif (Number.isFinite(payload)) {\n    // timestamp\n    var date = new Date(payload);\n    context.filename = util.format(\"%s/toami_%d%s%s%s%s%s.csv\",\n        dir,\n        date.getFullYear(),\n        (\"0\" + (date.getMonth() + 1)).slice(-2),\n        (\"0\" + date.getDate()).slice(-2),\n        (\"0\" + date.getHours()).slice(-2),\n        (\"0\" + date.getMinutes()).slice(-2),\n        (\"0\" + date.getSeconds()).slice(-2));\n    return null;\n} else {\n    // csv\n    return {\n        filename: context.filename,\n        payload: msg.payload,\n    };\n}","outputs":"1","noerr":0,"x":1043,"y":405.5,"wires":[["30cc51eb.f715ee"]]},{"id":"8ffe08b7.725838","type":"csv","z":"bffe4fe1.a00d58","name":"","sep":",","hdrin":"","hdrout":"","multi":"one","ret":"\\n","temp":"","x":887,"y":405.5,"wires":[["f2b35431.3b9828"]]},{"id":"a6248a16.444088","type":"inject","z":"bffe4fe1.a00d58","name":"timestamp every hour","topic":"","payload":"","payloadType":"date","repeat":"3600","crontab":"","once":true,"x":813,"y":305.5,"wires":[["f2b35431.3b9828"]]},{"id":"30cc51eb.f715ee","type":"file","z":"bffe4fe1.a00d58","name":"","filename":"","appendNewline":true,"createDir":false,"overwriteFile":"false","x":1192,"y":405.5,"wires":[]},{"id":"7f7eeb26.66e1ec","type":"change","z":"bffe4fe1.a00d58","name":"trigger","rules":[{"t":"set","p":"payload","pt":"msg","to":"@trigger","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":359,"y":208.5,"wires":[["939e3ff0.99be08"]]},{"id":"5d441392.b0b55c","type":"change","z":"bffe4fe1.a00d58","name":"RF1 convert toami","rules":[{"t":"move","p":"payload.temperature","pt":"msg","to":"payload.n01","tot":"msg"},{"t":"move","p":"payload.humidity","pt":"msg","to":"payload.n02","tot":"msg"},{"t":"move","p":"payload.pressure","pt":"msg","to":"payload.n03","tot":"msg"},{"t":"move","p":"payload.location","pt":"msg","to":"payload.l01","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":445,"y":475.5,"wires":[["81323bbd.570388"]]},{"id":"4d40aa1c.090bcc","type":"change","z":"bffe4fe1.a00d58","name":"RF2 convert toami","rules":[{"t":"move","p":"payload.temperature","pt":"msg","to":"payload.n04","tot":"msg"},{"t":"move","p":"payload.humidity","pt":"msg","to":"payload.n05","tot":"msg"},{"t":"move","p":"payload.pressure","pt":"msg","to":"payload.n06","tot":"msg"},{"t":"delete","p":"payload.location","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":446,"y":551,"wires":[["81323bbd.570388"]]},{"id":"a8febdc9.5f861","type":"change","z":"bffe4fe1.a00d58","name":"send trigger","rules":[{"t":"set","p":"payload","pt":"msg","to":"@send","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":423,"y":366,"wires":[["81323bbd.570388"]]},{"id":"6035a52e.12bab4","type":"function","z":"bffe4fe1.a00d58","name":"Packet Parser","func":"\n// $1 : Src address\n// $2 : GNRMC\n// $3 : Temperature\n// $4 : Humidity\n// $5 : Atmospheric pressure\nvar regex = /^([0-9a-fA-F]+),(?:\\$GNRMC,(.*),)?BME280,([0-9.]*),([0-9.]*),([0-9.]*)$/;\n\n// $1  : UTC Time\n// $2  : A:Valid, V:Invalid\n// $3  : Latitude\n// $4  : N:North, S:South\n// $5  : Longitude\n// $6  : E:East, W:West\n// $7  : Speed over ground\n// $8  : Course over ground\n// $9  : UTC Date\n// $10 : Magnetic variation\n// $11 : Magnetic variation direction (E:East, W:West)\n// $12 : Positioning system mode indicator\n// $13 : Checksum\nvar rmc = /^([0-9.]*),(A|V),([0-9.]*),(N|S),([0-9.]*),(E|W),([0-9.]*),([0-9.]*),(\\d*),([0-9.]*),(E?|W?),(A|D|E|M|S|N)\\*([0-9A-F]{2})$/;\n\n//  $1 : Degree\n//  $2 : Minutes\n//  $3 : Seconds\nvar dms = /(\\d*)(\\d{2})\\.(\\d*)/;\n\nfunction translate(value) {\n    var degrees = parseInt(value[1], 10);\n    var minutes = parseInt(value[2], 10);\n    var seconds = parseFloat(value[3].replace(/(\\d{2})(\\d*)/, \"$1.$2\"));\n    return degrees + (minutes / 60) + (seconds / 3600);\n}\n\n/* globals msg, node */\nvar rssi = msg.rssi;\nvar payload = msg.payload;\n\n// payload parse\nvar m = regex.exec(payload);\nif (!m) {\n    node.error(\"Invalid msg : \" + payload, msg);\n    return;\n}\n\nvar src = parseInt(m[1], 16);\nvar gnrmc = m[2];\nvar temperature = parseFloat(m[3]);\nvar humidity = parseFloat(m[4]);\nvar pressure = parseFloat(m[5]);\n\nvar result = {\n    src: src,\n    rssi: rssi,\n    payload: {\n        temperature: temperature,\n        humidity: humidity,\n        pressure: pressure,\n    },\n};\n\nif (gnrmc) {\n        m = rmc.exec(gnrmc);\n    if (!m) {\n        node.error(\"Invalid gnrmc : \" + gnrmc, msg);\n        return;\n    }\n\n    var latitudeValue = m[3];\n    var latitudeDirection = m[4];\n\n    var longitudeValue = m[5];\n    var longitudeDirection = m[6];\n\n    m = dms.exec(latitudeValue);\n    if (!m) {\n        node.error(\"Invalid latitude : \" + latitudeValue , msg);\n        return;\n    }\n    var latitude = translate(m);\n\n    m = dms.exec(longitudeValue);\n    if (!m) {\n        node.error(\"Invalid longitude : \" + longitudeValue , msg);\n        return;\n    }\n    var longitude = translate(m);\n\n    if (latitudeDirection === \"S\") {\n        latitude *= -1;\n    }\n\n    if (longitudeDirection === \"W\") {\n        longitude *= -1;\n    }\n\n    result.payload.location = { latitude: latitude, longitude: longitude };\n}\n\nreturn result;","outputs":1,"noerr":0,"x":127,"y":544.5,"wires":[["131bac9b.d41d43"]]},{"id":"131bac9b.d41d43","type":"switch","z":"bffe4fe1.a00d58","name":"","property":"src","propertyType":"msg","rules":[{"t":"eq","v":"2","vt":"str"},{"t":"eq","v":"3","vt":"str"}],"checkall":"true","outputs":2,"x":224,"y":614.5000305175781,"wires":[["5d441392.b0b55c"],["4d40aa1c.090bcc"]]},{"id":"b5adebb.4c51a98","type":"change","z":"bffe4fe1.a00d58","name":"start trigger","rules":[{"t":"set","p":"payload","pt":"msg","to":"@start","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":422,"y":289,"wires":[["81323bbd.570388"]]},{"id":"c3dc5232.d7e1c8","type":"function","z":"bffe4fe1.a00d58","name":"Packet Parser","func":"\n// $1 : Src address\n// $2 : GNRMC\n// $3 : Temperature\n// $4 : Humidity\n// $5 : Atmospheric pressure\nvar regex = /^([0-9a-fA-F]+),(?:\\$GNRMC,(.*),)?BME280,([0-9.]*),([0-9.]*),([0-9.]*)$/;\n\n// $1  : UTC Time\n// $2  : A:Valid, V:Invalid\n// $3  : Latitude\n// $4  : N:North, S:South\n// $5  : Longitude\n// $6  : E:East, W:West\n// $7  : Speed over ground\n// $8  : Course over ground\n// $9  : UTC Date\n// $10 : Magnetic variation\n// $11 : Magnetic variation direction (E:East, W:West)\n// $12 : Positioning system mode indicator\n// $13 : Checksum\nvar rmc = /^([0-9.]*),(A|V),([0-9.]*),(N|S),([0-9.]*),(E|W),([0-9.]*),([0-9.]*),(\\d*),([0-9.]*),(E?|W?),(A|D|E|M|S|N)\\*([0-9A-F]{2})$/;\n\n//  $1 : Degree\n//  $2 : Minutes\n//  $3 : Seconds\nvar dms = /(\\d*)(\\d{2})\\.(\\d*)/;\n\nfunction translate(value) {\n    var degrees = parseInt(value[1], 10);\n    var minutes = parseInt(value[2], 10);\n    var seconds = parseFloat(value[3].replace(/(\\d{2})(\\d*)/, \"$1.$2\"));\n    return degrees + (minutes / 60) + (seconds / 3600);\n}\n\n/* globals msg, node */\nvar rssi = msg.rssi;\nvar payload = msg.payload;\n\n// payload parse\nvar m = regex.exec(payload);\nif (!m) {\n    node.error(\"Invalid msg : \" + payload, msg);\n    return;\n}\n\nvar src = parseInt(m[1], 16);\nvar gnrmc = m[2];\nvar temperature = parseFloat(m[3]);\nvar humidity = parseFloat(m[4]);\nvar pressure = parseFloat(m[5]);\n\nvar result = {\n    src: src,\n    rssi: rssi,\n    payload: {\n        temperature: temperature,\n        humidity: humidity,\n        pressure: pressure,\n    },\n};\n\nif (gnrmc) {\n        m = rmc.exec(gnrmc);\n    if (!m) {\n        node.error(\"Invalid gnrmc : \" + gnrmc, msg);\n        return;\n    }\n\n    var latitudeValue = m[3];\n    var latitudeDirection = m[4];\n\n    var longitudeValue = m[5];\n    var longitudeDirection = m[6];\n\n    m = dms.exec(latitudeValue);\n    if (!m) {\n        node.error(\"Invalid latitude : \" + latitudeValue , msg);\n        return;\n    }\n    var latitude = translate(m);\n\n    m = dms.exec(longitudeValue);\n    if (!m) {\n        node.error(\"Invalid longitude : \" + longitudeValue , msg);\n        return;\n    }\n    var longitude = translate(m);\n\n    if (latitudeDirection === \"S\") {\n        latitude *= -1;\n    }\n\n    if (longitudeDirection === \"W\") {\n        longitude *= -1;\n    }\n\n    result.payload.location = { latitude: latitude, longitude: longitude };\n}\n\nreturn result;","outputs":1,"noerr":0,"x":124,"y":721,"wires":[["55c70648.6c6b2"]]},{"id":"55c70648.6c6b2","type":"switch","z":"bffe4fe1.a00d58","name":"","property":"src","propertyType":"msg","rules":[{"t":"eq","v":"2","vt":"str"},{"t":"eq","v":"3","vt":"str"}],"checkall":"true","outputs":2,"x":180,"y":783.0000305175781,"wires":[["a8cc5073.4c5578"],["aee623ea.d13728"]]},{"id":"a8cc5073.4c5578","type":"change","z":"bffe4fe1.a00d58","name":"RF1 convert toami","rules":[{"t":"move","p":"payload.temperature","pt":"msg","to":"payload.n07","tot":"msg"},{"t":"move","p":"payload.humidity","pt":"msg","to":"payload.n08","tot":"msg"},{"t":"move","p":"payload.pressure","pt":"msg","to":"payload.n09","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":445,"y":680,"wires":[["81323bbd.570388"]]},{"id":"aee623ea.d13728","type":"change","z":"bffe4fe1.a00d58","name":"RF2 convert toami","rules":[{"t":"move","p":"payload.temperature","pt":"msg","to":"payload.n10","tot":"msg"},{"t":"move","p":"payload.humidity","pt":"msg","to":"payload.n11","tot":"msg"},{"t":"move","p":"payload.pressure","pt":"msg","to":"payload.n12","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":446,"y":755.5,"wires":[["81323bbd.570388"]]},{"id":"2c5eeb6f.2980bc","type":"serial in","z":"bffe4fe1.a00d58","name":"EnOcean","serial":"f0f615ba.7b902","x":81,"y":872.5,"wires":[["9f1c4a5a.b4d24"]]},{"id":"70188ef2.454698","type":"switch","z":"bffe4fe1.a00d58","name":"","property":"id","propertyType":"msg","rules":[{"t":"eq","v":"04017d2a","vt":"str"},{"t":"eq","v":"0400f427","vt":"str"}],"checkall":"true","outputs":2,"x":246,"y":942,"wires":[["6e4bf822.b48228"],["66bd338f.fef894"]]},{"id":"6e4bf822.b48228","type":"change","z":"bffe4fe1.a00d58","name":"RF1 convert toami","rules":[{"t":"move","p":"payload.temperature","pt":"msg","to":"payload.n13","tot":"msg"},{"t":"move","p":"payload.humidity","pt":"msg","to":"payload.n14","tot":"msg"},{"t":"move","p":"payload.pressure","pt":"msg","to":"payload.n15","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":439,"y":907,"wires":[["81323bbd.570388"]]},{"id":"66bd338f.fef894","type":"change","z":"bffe4fe1.a00d58","name":"RF2 convert toami","rules":[{"t":"move","p":"payload.temperature","pt":"msg","to":"payload.n16","tot":"msg"},{"t":"move","p":"payload.humidity","pt":"msg","to":"payload.n17","tot":"msg"},{"t":"move","p":"payload.pressure","pt":"msg","to":"payload.n18","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":439,"y":979,"wires":[["81323bbd.570388"]]},{"id":"c88d6466.7cf8e8","type":"serial in","z":"bffe4fe1.a00d58","name":"RTCM","serial":"e57727c4.b16f6","x":55,"y":95.5,"wires":[["2a74ac38.e597f4"]]},{"id":"2a74ac38.e597f4","type":"delay","z":"bffe4fe1.a00d58","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":105,"y":172.5,"wires":[["36d23c20.c6f7b4","7f7eeb26.66e1ec","a514277b.d4bab","b5adebb.4c51a98"]]},{"id":"9f1c4a5a.b4d24","type":"esp3 in","z":"bffe4fe1.a00d58","name":"","eeps":[{"id":"04017d2a","eep":"a5-02-05"},{"id":"0400f427","eep":"a5-02-05"}],"x":105,"y":943.5,"wires":[["70188ef2.454698"]]},{"id":"92f328b8.0ebbc","type":"debug","z":"bffe4fe1.a00d58","name":"","active":true,"console":"false","complete":"true","x":1203.7666015625,"y":577.38330078125,"wires":[]},{"id":"f14bc152.1ac9c8","type":"delay","z":"bffe4fe1.a00d58","name":"","pauseType":"queue","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"2","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":863,"y":98.5,"wires":[["18f8778e.b168b8"]]},{"id":"ac8e213f.257558","type":"rm92a-serial","z":"","serialport":"/dev/ttyRM92A"},{"id":"e094da4d.9f8538","type":"rm92a-config","z":"","reset":"/home/pi/gateway/rm92a_reset.sh","mode":"1","ch":"24","panid":"0x1234","src":"0x0001","dst":"0xFFFF","pw":"0","bw":"0","sf":"0","bitrate":"50000","ack":false,"timeout":"1","retry":"0","rtc":"0"},{"id":"5497306f.b6ca3","type":"slr429-serial","z":"","serialport":"/dev/ttySLR429"},{"id":"6e56209.0cda56","type":"slr429-config","z":"","mode":"3","gid":"0x00","eid":"0x01","did":"0x00","ch":"27","chip":"0"},{"id":"f0f615ba.7b902","type":"serial-port","z":"","serialport":"/dev/ttyEnOcean","serialbaud":"57600","databits":"8","parity":"none","stopbits":"1","newline":"100","bin":"bin","out":"time","addchar":false},{"id":"e57727c4.b16f6","type":"serial-port","z":"","serialport":"/dev/ttyACM0","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","newline":"100","bin":"bin","out":"time","addchar":false}]